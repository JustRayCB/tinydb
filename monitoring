#!/bin/bash

err(){
    echo -e "\e[1;31m E: $* \e[0m" >> /dev/stderr
}

TO_LAUNCH=$1

if [[ $TO_LAUNCH == "run" ]]
then
    PATH_TO_DB=${2:-data/students.bin}
    QUERIES=$3
    #soit le fichier existe
    if [[ -f "$PATH_TO_DB" ]]
    then
        if [[ $QUERIES == "" ]]
        then
            ./tinydb $PATH_TO_DB
        else
            if [[ -f $QUERIES ]]
            then
                ./tinydb $PATH_TO_DB $QUERIES
            else
                err "Le fichier texte n'existe pas"
            fi
        fi
    else
        #soit le fichier n'existe pas
        mkdir data
        touch $PATH_TO_DB
        err "Le chemin vers la db n'existe pas"
    fi
elif [[ $TO_LAUNCH == "status" ]]
then
    INSTANCE_COUNT=$(pgrep tinydb -c)
    INSTANCE_COUNT=$((INSTANCE_COUNT/5))
    echo "$INSTANCE_COUNT instance(s) running"
    ALL_INSTANCES=$(pgrep tinydb)
    COUNT=0
    for pid in $ALL_INSTANCES
    do
        if ! ((COUNT % 5))
        then
            echo -e "  > PID $pid"
            COUNT=$((COUNT+1))
        else 
            COUNT=$((COUNT+1))
        fi
    done
    

elif [[ $TO_LAUNCH == "sync" ]]
then
    INSTANCE_COUNT=$(pgrep tinydb -c)
    echo "Found $((INSTANCE_COUNT/5)) instance(s) of tinydb"
    ALL_INSTANCES=$(pgrep tinydb)
    COUNT=0
    for pid in $ALL_INSTANCES
    do
        if ! ((COUNT % 5))
        then
            echo "  Sync process $pid..."
            kill -SIGUSR1 $pid
            COUNT=$((COUNT+1))
        else
            COUNT=$((COUNT+1))
        fi
    done
    echo "Done"



elif [[ $TO_LAUNCH == "shutdown" ]]
then
    PID=$2
    ALL_INSTANCES=$(pgrep tinydb)
    INSTANCE_COUNT=$(pgrep tinydb -c)
    
    COUNT=0

    

    if [[ $PID == "" ]]
    then
        #on devra demander pour chaque pid père si on veut le shutdown
        for pid in $ALL_INSTANCES
        do
            if ! ((COUNT%5))
            then
                COUNT=$((COUNT+1))
                #si c'est un processus principal
                echo "Voulez-vous terminer le processus $pid?(y/n)"
                read choice

                if [[ $choice == "y" ]]
                then
                    #si on veut supprimer le supprimer le père, on doit incrémenter le compteur
                    #de 5 afin de "passer" ses fils
                    pid=$((pid-1))
                    kill -- -$pid
                fi  
            else
                COUNT=$((COUNT+1))
            fi
        done
        # for pid_to_kill in ${INSTANCES_TO_KILL[@]}; do
        #     echo "$pid_to_kill"
        #     kill -- $pid_to_kill
        # done
    else
        found=false
        for pid in $ALL_INSTANCES
        do
            if ! ((COUNT % 5))
            then
                COUNT=$((COUNT+1))
                if [[ $pid == $PID ]]
                then
                    #si c'est un processus principal on kill le groupe associé
                    PID=$((PID-1))
                    kill -- -$PID
                    found=true
                    break
                fi
            else
                COUNT=$((COUNT+1))
            fi
        done
        if [[ $found == false ]]
        then
            err "Le pid donné n'existe pas ou n'est pas celui d'un processus père"
        fi
    fi

else
    echo -e "Mauvaise utilisation!\nUtilisez : './monitoring opt [chemin_vers_db] [fichier_requetes]'\nopt=run ou status ou sync ou shutdown\nLes crochets signifient que les arguments sont optionnels"
fi